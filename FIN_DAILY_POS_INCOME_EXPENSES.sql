CREATE OR REPLACE PACKAGE        FIN_DAILY_POS_INCOME_EXPENSES AS 

  /* TODO enter package declarations (types, exceptions, methods etc) here */
  PROCEDURE FIN_DAILY_POS_INCOME_EXPENSES(	inp_str      IN  VARCHAR2,
                                            out_retCode  OUT NUMBER,
                                            out_rec      OUT VARCHAR2 );

END FIN_DAILY_POS_INCOME_EXPENSES;
/


CREATE OR REPLACE PACKAGE BODY                             FIN_DAILY_POS_INCOME_EXPENSES AS

--Update User - Saung Hnin Oo
-- Update Date - 21-3-2017

/******************************************************************************
 NAME:       FIN_DAILY_POS_INCOME_EXPENSES
 PURPOSE:

 REVISIONS:
 Ver        Date        Author           Description
 ---------  ----------  ---------------  ---------------------------------------
 1.0        11/29/2016      Administrator       1. Created this package body.
******************************************************************************/
--------------------------------------------------------------------------------
    -- Cursor declaration
    -- This cursor will fetch all the data based on the main query
--------------------------------------------------------------------------------
  
  outArr            tbaadm.basp0099.ArrayType;  -- Input Parse Array  
  vi_tranDate       VARCHAR2(10);               -- Input to procedure
--------------------------------------------------------------------------------
-- CURSOR declaration FIN_DAILY_POS_INCOME_EXPENSES CURSOR
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
-- CURSOR ExtractData
--------------------------------------------------------------------------------
CURSOR ExtractData (ci_tranDate VARCHAR2)
IS
  SELECT SOT.SOL_ID,SOT.br_open_date, SOT.SOL_DESC, NVL(T.OPEN_INCOME,0) AS OPEN_INCOME, NVL(T.OPEN_EXPENSES,0) AS OPEN_EXPENSES
  , NVL(T.INCOME,0) AS INCOME, NVL(T.EXPENSES,0) AS EXPENSES
  , NVL(T.DIF_INCOME,0) AS DIF_INCOME, NVL(T.DIF_EXPENSES,0) AS DIF_EXPENSES
  ,  (SELECT NVL(MAX(BAL_DATE), TO_DATE(CAST(ci_tranDate AS VARCHAR(10)), 'dd-MM-yyyy')- 1) 
  FROM TBAADM.GSTT 
  WHERE BAL_DATE < TO_DATE(CAST(ci_tranDate AS VARCHAR(10)), 'dd-MM-yyyy')) AS ODATE
  FROM TBAADM.SERVICE_OUTLET_TABLE SOT LEFT JOIN
  (SELECT TMP.SOL_ID, SUM(TMP.INCOME_OPENING) AS OPEN_INCOME, SUM(TMP.CHARGES_OPENING) AS OPEN_EXPENSES
  , SUM(TMP.INCOME_TEMP) AS INCOME, SUM(TMP.CHARGES_TEMP) AS EXPENSES
  , SUM(TMP.INCOME_TEMP) - SUM(TMP.INCOME_OPENING) AS DIF_INCOME
  , SUM(TMP.CHARGES_TEMP) - SUM(TMP.CHARGES_OPENING) AS DIF_EXPENSES
  FROM 
  (
  SELECT SOL_ID, CRNCY_CODE, NVL(INCOME,0) AS INCOME, NVL(CHARGES,0) AS CHARGES,
  CASE CRNCY_CODE WHEN 'USD' THEN INCOME * NVL((SELECT VAR_CRNCY_UNITS
  FROM TBAADM.RTL WHERE TRIM(FXD_CRNCY_CODE) = 'USD'
  AND TRIM(VAR_CRNCY_CODE) = 'MMK'
  AND RATECODE = (SELECT VARIABLE_VALUE 
  FROM CUSTOM.CUST_GENCUST_PARAM_MAINT 
  WHERE MODULE_NAME = 'FOREIGN_CURRENCY' 
  AND VARIABLE_NAME = 'RATE_CODE')
  AND RTLIST_DATE = TO_DATE(CAST(ci_tranDate AS VARCHAR(10)),'dd-MM-yyyy')
  AND ROWNUM = 1),1) 
  WHEN 'EUR' THEN INCOME * NVL((SELECT VAR_CRNCY_UNITS
  FROM TBAADM.RTL WHERE TRIM(FXD_CRNCY_CODE) = 'EUR' 
  AND TRIM(VAR_CRNCY_CODE) = 'MMK'
  AND RATECODE = (SELECT VARIABLE_VALUE 
  FROM CUSTOM.CUST_GENCUST_PARAM_MAINT 
  WHERE MODULE_NAME = 'FOREIGN_CURRENCY' 
  AND VARIABLE_NAME = 'RATE_CODE')
  AND RTLIST_DATE = TO_DATE(CAST(ci_tranDate AS VARCHAR(10)),'dd-MM-yyyy')
  AND ROWNUM = 1),1) 
  WHEN 'SGD' THEN INCOME * NVL((SELECT VAR_CRNCY_UNITS
  FROM TBAADM.RTL WHERE TRIM(FXD_CRNCY_CODE) = 'SGD' 
  AND TRIM(VAR_CRNCY_CODE) = 'MMK'
  AND RATECODE = (SELECT VARIABLE_VALUE 
  FROM CUSTOM.CUST_GENCUST_PARAM_MAINT 
  WHERE MODULE_NAME = 'FOREIGN_CURRENCY' 
  AND VARIABLE_NAME = 'RATE_CODE')
  AND RTLIST_DATE = TO_DATE(CAST(ci_tranDate AS VARCHAR(10)),'dd-MM-yyyy')
  AND ROWNUM = 1),1) 
  WHEN 'MYR' THEN INCOME * NVL((SELECT VAR_CRNCY_UNITS
  FROM TBAADM.RTL WHERE TRIM(FXD_CRNCY_CODE) = 'MYR' 
  AND TRIM(VAR_CRNCY_CODE) = 'MMK'
  AND RATECODE = (SELECT VARIABLE_VALUE 
  FROM CUSTOM.CUST_GENCUST_PARAM_MAINT 
  WHERE MODULE_NAME = 'FOREIGN_CURRENCY' 
  AND VARIABLE_NAME = 'RATE_CODE')
  AND RTLIST_DATE = TO_DATE(CAST(ci_tranDate AS VARCHAR(10)),'dd-MM-yyyy')
  AND ROWNUM = 1),1) 
  WHEN 'THB' THEN INCOME * NVL((SELECT VAR_CRNCY_UNITS
  FROM TBAADM.RTL WHERE TRIM(FXD_CRNCY_CODE) = 'THB' 
  AND TRIM(VAR_CRNCY_CODE) = 'MMK'
  AND RATECODE = (SELECT VARIABLE_VALUE 
  FROM CUSTOM.CUST_GENCUST_PARAM_MAINT 
  WHERE MODULE_NAME = 'FOREIGN_CURRENCY' 
  AND VARIABLE_NAME = 'RATE_CODE')
  AND RTLIST_DATE = TO_DATE(CAST(ci_tranDate AS VARCHAR(10)),'dd-MM-yyyy')
  AND ROWNUM = 1),1) 
  WHEN 'JPY' THEN INCOME * NVL((SELECT VAR_CRNCY_UNITS
  FROM TBAADM.RTL WHERE TRIM(FXD_CRNCY_CODE) = 'JPY' 
  AND TRIM(VAR_CRNCY_CODE) = 'MMK'
  AND RATECODE = (SELECT VARIABLE_VALUE 
  FROM CUSTOM.CUST_GENCUST_PARAM_MAINT 
  WHERE MODULE_NAME = 'FOREIGN_CURRENCY' 
  AND VARIABLE_NAME = 'RATE_CODE')
  AND RTLIST_DATE = TO_DATE(CAST(ci_tranDate AS VARCHAR(10)),'dd-MM-yyyy')
  AND ROWNUM = 1),1) 
  ELSE  NVL(INCOME,0) END AS INCOME_TEMP  
  , CASE CRNCY_CODE WHEN 'USD' THEN NVL(CHARGES,0) * NVL((SELECT VAR_CRNCY_UNITS
  FROM TBAADM.RTL WHERE TRIM(FXD_CRNCY_CODE) = 'USD' 
  AND TRIM(VAR_CRNCY_CODE) = 'MMK'
  AND RATECODE = (SELECT VARIABLE_VALUE 
  FROM CUSTOM.CUST_GENCUST_PARAM_MAINT 
  WHERE MODULE_NAME = 'FOREIGN_CURRENCY' 
  AND VARIABLE_NAME = 'RATE_CODE')
  AND RTLIST_DATE = TO_DATE(CAST(ci_tranDate AS VARCHAR(10)),'dd-MM-yyyy')
  AND ROWNUM = 1),1) 
  WHEN 'EUR' THEN NVL(CHARGES,0) * NVL((SELECT VAR_CRNCY_UNITS
  FROM TBAADM.RTL WHERE TRIM(FXD_CRNCY_CODE) = 'EUR' 
  AND TRIM(VAR_CRNCY_CODE) = 'MMK'
  AND RATECODE = (SELECT VARIABLE_VALUE 
  FROM CUSTOM.CUST_GENCUST_PARAM_MAINT 
  WHERE MODULE_NAME = 'FOREIGN_CURRENCY' 
  AND VARIABLE_NAME = 'RATE_CODE')
  AND RTLIST_DATE = TO_DATE(CAST(ci_tranDate AS VARCHAR(10)),'dd-MM-yyyy')
  AND ROWNUM = 1),1) 
  WHEN 'SGD' THEN NVL(CHARGES,0) * NVL((SELECT VAR_CRNCY_UNITS
  FROM TBAADM.RTL WHERE TRIM(FXD_CRNCY_CODE) = 'SGD' 
  AND TRIM(VAR_CRNCY_CODE) = 'MMK'
  AND RATECODE = (SELECT VARIABLE_VALUE 
  FROM CUSTOM.CUST_GENCUST_PARAM_MAINT 
  WHERE MODULE_NAME = 'FOREIGN_CURRENCY' 
  AND VARIABLE_NAME = 'RATE_CODE')
  AND RTLIST_DATE = TO_DATE(CAST(ci_tranDate AS VARCHAR(10)),'dd-MM-yyyy')
  AND ROWNUM = 1),1) 
  WHEN 'MYR' THEN NVL(CHARGES,0) * NVL((SELECT VAR_CRNCY_UNITS
  FROM TBAADM.RTL WHERE TRIM(FXD_CRNCY_CODE) = 'MYR' 
  AND TRIM(VAR_CRNCY_CODE) = 'MMK'
  AND RATECODE = (SELECT VARIABLE_VALUE 
  FROM CUSTOM.CUST_GENCUST_PARAM_MAINT 
  WHERE MODULE_NAME = 'FOREIGN_CURRENCY' 
  AND VARIABLE_NAME = 'RATE_CODE')
  AND RTLIST_DATE = TO_DATE(CAST(ci_tranDate AS VARCHAR(10)),'dd-MM-yyyy')
  AND ROWNUM = 1),1)
  WHEN 'THB' THEN NVL(CHARGES,0) * NVL((SELECT VAR_CRNCY_UNITS
  FROM TBAADM.RTL WHERE TRIM(FXD_CRNCY_CODE) = 'THB' 
  AND TRIM(VAR_CRNCY_CODE) = 'MMK'
  AND RATECODE = (SELECT VARIABLE_VALUE 
  FROM CUSTOM.CUST_GENCUST_PARAM_MAINT 
  WHERE MODULE_NAME = 'FOREIGN_CURRENCY' 
  AND VARIABLE_NAME = 'RATE_CODE')
  AND RTLIST_DATE = TO_DATE(CAST(ci_tranDate AS VARCHAR(10)),'dd-MM-yyyy')
  AND ROWNUM = 1),1) 
  WHEN 'JPY' THEN NVL(CHARGES,0) * NVL((SELECT VAR_CRNCY_UNITS
  FROM TBAADM.RTL WHERE TRIM(FXD_CRNCY_CODE) = 'JPY' 
  AND TRIM(VAR_CRNCY_CODE) = 'MMK'
  AND RATECODE = (SELECT VARIABLE_VALUE 
  FROM CUSTOM.CUST_GENCUST_PARAM_MAINT 
  WHERE MODULE_NAME = 'FOREIGN_CURRENCY' 
  AND VARIABLE_NAME = 'RATE_CODE')
  AND RTLIST_DATE = TO_DATE(CAST(ci_tranDate AS VARCHAR(10)),'dd-MM-yyyy')
  AND ROWNUM = 1),1) 
  ELSE  NVL(CHARGES,0) END AS CHARGES_TEMP, 0 AS INCOME_OPENING, 0 AS CHARGES_OPENING
  FROM
  (SELECT CASE WHEN SUM(gstt.TOT_CR_BAL) > SUM(gstt.TOT_DR_BAL) 
  THEN SUM(gstt.TOT_CR_BAL) - SUM(gstt.TOT_DR_BAL) 
  ELSE SUM(gstt.TOT_DR_BAL) - SUM(gstt.TOT_CR_BAL) END AS total,
  gstt.SOL_ID,
  gstt.CRNCY_CODE,
  --gstt.GL_SUB_HEAD_CODE,
  fpt.DESCRIPTION
  FROM tbaadm.gstt gstt
  INNER JOIN CUSTOM.CUST_RPTCUST_GL_SUB_HEAD_TABLE fpt ON gstt.GL_SUB_HEAD_CODE = fpt.VARIABLE_VALUE 
  AND fpt.DESCRIPTION IS NOT NULL
  WHERE gstt.BAL_DATE = TO_DATE(CAST(ci_tranDate AS VARCHAR(10)),'dd-MM-yyyy') AND
  gstt.GL_SUB_HEAD_CODE = FPT.VARIABLE_VALUE
  AND fpt.DESCRIPTION IN('INCOME A/C','CHARGES A/C')
  AND fpt.BANK_ID = '01'
  AND fpt.MODULE_NAME = 'REPORT'
  AND fpt.SUB_MODULE_NAME = 'GL_SUB_HEAD_CODE'
  GROUP BY gstt.SOL_ID,gstt.CRNCY_CODE, fpt.DESCRIPTION)
  PIVOT (SUM(NVL(TOTAL,0)) FOR (DESCRIPTION) 
  IN ('INCOME A/C' AS INCOME, 'CHARGES A/C' AS CHARGES))  
  
  UNION ALL
  
  SELECT SOL_ID, CRNCY_CODE, NVL(INCOME,0) AS INCOME, NVL(CHARGES,0) AS CHARGES,
  0 AS INCOME_TEMP, 0 AS CHARGES_TEMP,
  CASE CRNCY_CODE WHEN 'USD' THEN INCOME * NVL((SELECT VAR_CRNCY_UNITS
  FROM TBAADM.RTL WHERE TRIM(FXD_CRNCY_CODE) = 'USD'
  AND TRIM(VAR_CRNCY_CODE) = 'MMK'
  AND RATECODE = (SELECT VARIABLE_VALUE 
  FROM CUSTOM.CUST_GENCUST_PARAM_MAINT 
  WHERE MODULE_NAME = 'FOREIGN_CURRENCY' 
  AND VARIABLE_NAME = 'RATE_CODE')
  AND TRUNC(RTLIST_DATE) = (SELECT NVL(MAX(RTLIST_DATE), TO_DATE(CAST(ci_tranDate AS VARCHAR(10)), 'dd-MM-yyyy')- 1) 
  FROM TBAADM.RTL 
  WHERE RTLIST_DATE < TO_DATE(CAST(ci_tranDate AS VARCHAR(10)), 'dd-MM-yyyy'))
  AND ROWNUM = 1),1) 
  WHEN 'EUR' THEN INCOME * NVL((SELECT VAR_CRNCY_UNITS
  FROM TBAADM.RTL WHERE TRIM(FXD_CRNCY_CODE) = 'EUR' 
  AND TRIM(VAR_CRNCY_CODE) = 'MMK'
  AND RATECODE = (SELECT VARIABLE_VALUE 
  FROM CUSTOM.CUST_GENCUST_PARAM_MAINT 
  WHERE MODULE_NAME = 'FOREIGN_CURRENCY' 
  AND VARIABLE_NAME = 'RATE_CODE')
  AND TRUNC(RTLIST_DATE) = (SELECT NVL(MAX(RTLIST_DATE), TO_DATE(CAST(ci_tranDate AS VARCHAR(10)), 'dd-MM-yyyy')- 1) 
  FROM TBAADM.RTL 
  WHERE RTLIST_DATE < TO_DATE(CAST(ci_tranDate AS VARCHAR(10)), 'dd-MM-yyyy'))
  AND ROWNUM = 1),1) 
  WHEN 'SGD' THEN INCOME * NVL((SELECT VAR_CRNCY_UNITS
  FROM TBAADM.RTL WHERE TRIM(FXD_CRNCY_CODE) = 'SGD' 
  AND TRIM(VAR_CRNCY_CODE) = 'MMK'
  AND RATECODE = (SELECT VARIABLE_VALUE 
  FROM CUSTOM.CUST_GENCUST_PARAM_MAINT 
  WHERE MODULE_NAME = 'FOREIGN_CURRENCY' 
  AND VARIABLE_NAME = 'RATE_CODE')
  AND TRUNC(RTLIST_DATE) = (SELECT NVL(MAX(RTLIST_DATE), TO_DATE(CAST(ci_tranDate AS VARCHAR(10)), 'dd-MM-yyyy')- 1) 
  FROM TBAADM.RTL 
  WHERE RTLIST_DATE < TO_DATE(CAST(ci_tranDate AS VARCHAR(10)), 'dd-MM-yyyy'))
  AND ROWNUM = 1),1) 
  WHEN 'MYR' THEN INCOME * NVL((SELECT VAR_CRNCY_UNITS
  FROM TBAADM.RTL WHERE TRIM(FXD_CRNCY_CODE) = 'MYR' 
  AND TRIM(VAR_CRNCY_CODE) = 'MMK'
  AND RATECODE = (SELECT VARIABLE_VALUE 
  FROM CUSTOM.CUST_GENCUST_PARAM_MAINT 
  WHERE MODULE_NAME = 'FOREIGN_CURRENCY' 
  AND VARIABLE_NAME = 'RATE_CODE')
  AND TRUNC(RTLIST_DATE) = (SELECT NVL(MAX(RTLIST_DATE), TO_DATE(CAST(ci_tranDate AS VARCHAR(10)), 'dd-MM-yyyy')- 1) 
  FROM TBAADM.RTL 
  WHERE RTLIST_DATE < TO_DATE(CAST(ci_tranDate AS VARCHAR(10)), 'dd-MM-yyyy'))
  AND ROWNUM = 1),1) 
  WHEN 'THB' THEN INCOME * NVL((SELECT VAR_CRNCY_UNITS
  FROM TBAADM.RTL WHERE TRIM(FXD_CRNCY_CODE) = 'THB' 
  AND TRIM(VAR_CRNCY_CODE) = 'MMK'
  AND RATECODE = (SELECT VARIABLE_VALUE 
  FROM CUSTOM.CUST_GENCUST_PARAM_MAINT 
  WHERE MODULE_NAME = 'FOREIGN_CURRENCY' 
  AND VARIABLE_NAME = 'RATE_CODE')
  AND TRUNC(RTLIST_DATE) = (SELECT NVL(MAX(RTLIST_DATE), TO_DATE(CAST(ci_tranDate AS VARCHAR(10)), 'dd-MM-yyyy')- 1) 
  FROM TBAADM.RTL 
  WHERE RTLIST_DATE < TO_DATE(CAST(ci_tranDate AS VARCHAR(10)), 'dd-MM-yyyy'))
  AND ROWNUM = 1),1) 
  WHEN 'JPY' THEN INCOME * NVL((SELECT VAR_CRNCY_UNITS
  FROM TBAADM.RTL WHERE TRIM(FXD_CRNCY_CODE) = 'JPY' 
  AND TRIM(VAR_CRNCY_CODE) = 'MMK'
  AND RATECODE = (SELECT VARIABLE_VALUE 
  FROM CUSTOM.CUST_GENCUST_PARAM_MAINT 
  WHERE MODULE_NAME = 'FOREIGN_CURRENCY' 
  AND VARIABLE_NAME = 'RATE_CODE')
  AND TRUNC(RTLIST_DATE) = (SELECT NVL(MAX(RTLIST_DATE), TO_DATE(CAST(ci_tranDate AS VARCHAR(10)), 'dd-MM-yyyy')- 1) 
  FROM TBAADM.RTL 
  WHERE RTLIST_DATE < TO_DATE(CAST(ci_tranDate AS VARCHAR(10)), 'dd-MM-yyyy'))
  AND ROWNUM = 1),1) 
  ELSE  NVL(INCOME,0) END AS INCOME_OPENING
  
  , CASE CRNCY_CODE WHEN 'USD' THEN NVL(CHARGES,0) * NVL((SELECT VAR_CRNCY_UNITS
  FROM TBAADM.RTL WHERE TRIM(FXD_CRNCY_CODE) = 'USD' 
  AND TRIM(VAR_CRNCY_CODE) = 'MMK'
  AND RATECODE = (SELECT VARIABLE_VALUE 
  FROM CUSTOM.CUST_GENCUST_PARAM_MAINT 
  WHERE MODULE_NAME = 'FOREIGN_CURRENCY' 
  AND VARIABLE_NAME = 'RATE_CODE')
  AND TRUNC(RTLIST_DATE) = (SELECT NVL(MAX(RTLIST_DATE), TO_DATE(CAST(ci_tranDate AS VARCHAR(10)), 'dd-MM-yyyy')- 1) 
  FROM TBAADM.RTL 
  WHERE RTLIST_DATE < TO_DATE(CAST(ci_tranDate AS VARCHAR(10)), 'dd-MM-yyyy'))
  AND ROWNUM = 1),1) 
  WHEN 'EUR' THEN NVL(CHARGES,0) * NVL((SELECT VAR_CRNCY_UNITS
  FROM TBAADM.RTL WHERE TRIM(FXD_CRNCY_CODE) = 'EUR' 
  AND TRIM(VAR_CRNCY_CODE) = 'MMK'
  AND RATECODE = (SELECT VARIABLE_VALUE 
  FROM CUSTOM.CUST_GENCUST_PARAM_MAINT 
  WHERE MODULE_NAME = 'FOREIGN_CURRENCY' 
  AND VARIABLE_NAME = 'RATE_CODE')
  AND TRUNC(RTLIST_DATE) = (SELECT NVL(MAX(RTLIST_DATE), TO_DATE(CAST(ci_tranDate AS VARCHAR(10)), 'dd-MM-yyyy')- 1) 
  FROM TBAADM.RTL 
  WHERE RTLIST_DATE < TO_DATE(CAST(ci_tranDate AS VARCHAR(10)), 'dd-MM-yyyy'))
  AND ROWNUM = 1),1) 
  WHEN 'SGD' THEN NVL(CHARGES,0) * NVL((SELECT VAR_CRNCY_UNITS
  FROM TBAADM.RTL WHERE TRIM(FXD_CRNCY_CODE) = 'SGD' 
  AND TRIM(VAR_CRNCY_CODE) = 'MMK'
  AND RATECODE = (SELECT VARIABLE_VALUE 
  FROM CUSTOM.CUST_GENCUST_PARAM_MAINT 
  WHERE MODULE_NAME = 'FOREIGN_CURRENCY' 
  AND VARIABLE_NAME = 'RATE_CODE')
  AND TRUNC(RTLIST_DATE) = (SELECT NVL(MAX(RTLIST_DATE), TO_DATE(CAST(ci_tranDate AS VARCHAR(10)), 'dd-MM-yyyy')- 1) 
  FROM TBAADM.RTL 
  WHERE RTLIST_DATE < TO_DATE(CAST(ci_tranDate AS VARCHAR(10)), 'dd-MM-yyyy'))
  AND ROWNUM = 1),1) 
  WHEN 'MYR' THEN NVL(CHARGES,0) * NVL((SELECT VAR_CRNCY_UNITS
  FROM TBAADM.RTL WHERE TRIM(FXD_CRNCY_CODE) = 'MYR' 
  AND TRIM(VAR_CRNCY_CODE) = 'MMK'
  AND RATECODE = (SELECT VARIABLE_VALUE 
  FROM CUSTOM.CUST_GENCUST_PARAM_MAINT 
  WHERE MODULE_NAME = 'FOREIGN_CURRENCY' 
  AND VARIABLE_NAME = 'RATE_CODE')
  AND TRUNC(RTLIST_DATE) = (SELECT NVL(MAX(RTLIST_DATE), TO_DATE(CAST(ci_tranDate AS VARCHAR(10)), 'dd-MM-yyyy')- 1) 
  FROM TBAADM.RTL 
  WHERE RTLIST_DATE < TO_DATE(CAST(ci_tranDate AS VARCHAR(10)), 'dd-MM-yyyy'))
  AND ROWNUM = 1),1)
  WHEN 'THB' THEN NVL(CHARGES,0) * NVL((SELECT VAR_CRNCY_UNITS
  FROM TBAADM.RTL WHERE TRIM(FXD_CRNCY_CODE) = 'THB' 
  AND TRIM(VAR_CRNCY_CODE) = 'MMK'
  AND RATECODE = (SELECT VARIABLE_VALUE 
  FROM CUSTOM.CUST_GENCUST_PARAM_MAINT 
  WHERE MODULE_NAME = 'FOREIGN_CURRENCY' 
  AND VARIABLE_NAME = 'RATE_CODE')
  AND TRUNC(RTLIST_DATE) = (SELECT NVL(MAX(RTLIST_DATE), TO_DATE(CAST(ci_tranDate AS VARCHAR(10)), 'dd-MM-yyyy')- 1) 
  FROM TBAADM.RTL 
  WHERE RTLIST_DATE < TO_DATE(CAST(ci_tranDate AS VARCHAR(10)), 'dd-MM-yyyy'))
  AND ROWNUM = 1),1) 
  WHEN 'JPY' THEN NVL(CHARGES,0) * NVL((SELECT VAR_CRNCY_UNITS
  FROM TBAADM.RTL WHERE TRIM(FXD_CRNCY_CODE) = 'JPY' 
  AND TRIM(VAR_CRNCY_CODE) = 'MMK'
  AND RATECODE = (SELECT VARIABLE_VALUE 
  FROM CUSTOM.CUST_GENCUST_PARAM_MAINT 
  WHERE MODULE_NAME = 'FOREIGN_CURRENCY' 
  AND VARIABLE_NAME = 'RATE_CODE')
  AND TRUNC(RTLIST_DATE) = (SELECT NVL(MAX(RTLIST_DATE), TO_DATE(CAST(ci_tranDate AS VARCHAR(10)), 'dd-MM-yyyy')- 1) 
  FROM TBAADM.RTL 
  WHERE RTLIST_DATE < TO_DATE(CAST(ci_tranDate AS VARCHAR(10)), 'dd-MM-yyyy')) 
  AND ROWNUM = 1),1) 
  ELSE  NVL(CHARGES,0) END AS CHARGES_OPENING
  FROM
  (SELECT CASE WHEN SUM(gstt.TOT_CR_BAL) > SUM(gstt.TOT_DR_BAL) 
  THEN SUM(gstt.TOT_CR_BAL) - SUM(gstt.TOT_DR_BAL) 
  ELSE SUM(gstt.TOT_DR_BAL) - SUM(gstt.TOT_CR_BAL) END AS total,
  gstt.SOL_ID,
  gstt.CRNCY_CODE,
  --gstt.GL_SUB_HEAD_CODE,
  fpt.DESCRIPTION
  FROM tbaadm.gstt gstt
  INNER JOIN CUSTOM.CUST_RPTCUST_GL_SUB_HEAD_TABLE fpt ON gstt.GL_SUB_HEAD_CODE = fpt.VARIABLE_VALUE 
  AND fpt.DESCRIPTION IS NOT NULL
  WHERE TRUNC(gstt.BAL_DATE) = (SELECT NVL(MAX(BAL_DATE), TO_DATE(CAST(ci_tranDate AS VARCHAR(10)), 'dd-MM-yyyy')- 1) 
  FROM TBAADM.GSTT 
  WHERE BAL_DATE < TO_DATE(CAST(ci_tranDate AS VARCHAR(10)), 'dd-MM-yyyy')) AND
  gstt.GL_SUB_HEAD_CODE = FPT.VARIABLE_VALUE
  AND fpt.DESCRIPTION IN('INCOME A/C','CHARGES A/C')
  AND fpt.BANK_ID = '01'
  AND fpt.MODULE_NAME = 'REPORT'
  AND fpt.SUB_MODULE_NAME = 'GL_SUB_HEAD_CODE'
  GROUP BY gstt.SOL_ID,gstt.CRNCY_CODE, fpt.DESCRIPTION)
  PIVOT (SUM(NVL(TOTAL,0)) FOR (DESCRIPTION) 
  IN ('INCOME A/C' AS INCOME, 'CHARGES A/C' AS CHARGES))
  )TMP
  GROUP BY TMP.SOL_ID)T ON SOT.SOL_ID = T.SOL_ID
  WHERE SOT.DEL_FLG ='N'
  and SOT.SOL_ID != '20100'
  ORDER BY SOT.SOL_ID, SOT.br_open_date;
  

  PROCEDURE FIN_DAILY_POS_INCOME_EXPENSES(	inp_str      IN  VARCHAR2,
                                            out_retCode  OUT NUMBER,
                                            out_rec      OUT VARCHAR2 ) AS
  v_solID TBAADM.SERVICE_OUTLET_TABLE.SOL_ID%type;
 v_Open_Date      TBAADM.SERVICE_OUTLET_TABLE.br_open_date%TYPE;
  v_solDesc TBAADM.SERVICE_OUTLET_TABLE.SOL_DESC%type;
  v_openIncome TBAADM.GENERAL_ACCT_MAST_TABLE.CLR_BAL_AMT%type;
  v_openExpenses TBAADM.GENERAL_ACCT_MAST_TABLE.CLR_BAL_AMT%type;
  v_Income TBAADM.GENERAL_ACCT_MAST_TABLE.CLR_BAL_AMT%type;
  v_Expenses TBAADM.GENERAL_ACCT_MAST_TABLE.CLR_BAL_AMT%type;
  v_difIncome TBAADM.GENERAL_ACCT_MAST_TABLE.CLR_BAL_AMT%type;
  v_difExpenses TBAADM.GENERAL_ACCT_MAST_TABLE.CLR_BAL_AMT%type;
  v_oDate DATE;
  v_BranchName TBAADM.BRANCH_CODE_TABLE.BR_SHORT_NAME%type;
  v_BankAddress TBAADM.BRANCH_CODE_TABLE.BR_ADDR_1%type;
  v_BankPhone TBAADM.BRANCH_CODE_TABLE.PHONE_NUM%type;
  v_BankFax TBAADM.BRANCH_CODE_TABLE.FAX_NUM%type;
  BEGIN
  -- TODO: Implementation required for PROCEDURE FIN_DAILY_POSITION_CASH.FIN_DAILY_POSITION_CASH
  ------------------------------------------------------------------------------
          -- Out Ret code is the code which controls
          -- the while loop,it can have values 0,1
          -- 0 - The while loop is being executed
          -- 1 - Exit
  ------------------------------------------------------------------------------
		out_retCode := 0;
		out_rec := NULL;
    
    tbaadm.basp0099.formInputArr(inp_str, outArr);    
  ------------------------------------------------------------------------------
		-- Parsing the i/ps from the string
	------------------------------------------------------------------------------
    
    vi_tranDate    :=  outArr(0);
    
    IF NOT ExtractData%ISOPEN THEN
		--{
			BEGIN
			--{
				OPEN ExtractData (vi_tranDate);
			--}      
			END;
		--}
		END IF;
    
    IF ExtractData%ISOPEN THEN
		--{
			FETCH	ExtractData
			INTO  v_solID,  v_Open_Date,
      v_solDesc, v_openIncome, v_openExpenses, v_Income,
      v_Expenses, v_difIncome, v_difExpenses, v_oDate;
  ------------------------------------------------------------------------------
			-- Here it is checked whether the cursor has fetched
			-- something or not if not the cursor is closed
			-- and the out ret code is made equal to 1
  ------------------------------------------------------------------------------
			IF ExtractData%NOTFOUND THEN
			--{
				CLOSE ExtractData;
				out_retCode:= 1;
				RETURN;
			--}
			END IF;
		--}
    END IF;
     BEGIN
-------------------------------------------------------------------------------
    -- GET BANK INFORMATION
-------------------------------------------------------------------------------
      SELECT 
         BRANCH_CODE_TABLE.BR_SHORT_NAME AS "BranchName",
         BRANCH_CODE_TABLE.BR_ADDR_1 AS "Bank_Address",
         BRANCH_CODE_TABLE.PHONE_NUM AS "Bank_Phone",
         BRANCH_CODE_TABLE.FAX_NUM AS "Bank_Fax"
         INTO
         v_BranchName, v_BankAddress, v_BankPhone, v_BankFax
      FROM
         TBAADM.SERVICE_OUTLET_TABLE SERVICE_OUTLET_TABLE ,
         TBAADM.BRANCH_CODE_TABLE BRANCH_CODE_TABLE
      WHERE
         SERVICE_OUTLET_TABLE.SOL_ID = '20300'
         AND SERVICE_OUTLET_TABLE.BR_CODE = BRANCH_CODE_TABLE.BR_CODE
         AND SERVICE_OUTLET_TABLE.DEL_FLG = 'N'
         AND SERVICE_OUTLET_TABLE.BANK_ID = '01';
    END;
    
--------------------------------------------------------------------------------
-- out_rec variable retrieves the data to be sent to LST file with pipe seperation
--------------------------------------------------------------------------------
    out_rec:=	(
                v_solID           || '|' || 
           -- v_Open_Date      || '|' || 
                v_solDesc         || '|' ||
                v_openIncome      || '|' ||
                v_openExpenses    || '|' ||
                v_Income          || '|' ||
                v_Expenses        || '|' ||
                v_difIncome       || '|' ||
                v_difExpenses     || '|' ||
                v_BranchName      || '|' ||
                v_BankAddress     || '|' ||
                v_BankPhone       || '|' ||
                v_BankFax         || '|' ||
                to_char(to_date(v_oDate,'dd/Mon/yy'), 'dd-MM-yyyy'));
  
			dbms_output.put_line(out_rec);
      
  END FIN_DAILY_POS_INCOME_EXPENSES;

END FIN_DAILY_POS_INCOME_EXPENSES;
/
